@using GCServices.ConsumerPortal.UI.Models
@model GCServices.ConsumerPortal.UI.Models.PaymentRequestViewModel
@{
    ViewBag.Title = StringResources.AddNewCard_VBT;
    ViewBag.BackgroundClass = "background-image-payment-request";
}

<script>
    var Resources = {
        PaymentRequestJs_InvalidCreditCard_txt: "@Html.Raw(HttpUtility.JavaScriptStringEncode(StringResources.PaymentRequestJs_InvalidCreditCard_txt))",
        PaymentRequestJs_MaxPaymentAmount_txt: "@Html.Raw(HttpUtility.JavaScriptStringEncode(StringResources.PaymentRequestJs_MaxPaymentAmount_txt))",
        PaymentRequestJs_MinPaymentAmount_txt: "@Html.Raw(HttpUtility.JavaScriptStringEncode(StringResources.PaymentRequestJs_MinPaymentAmount_txt))",
    };
</script>

<div>
    <div>
        <div class="right-title">@ViewBag.Title</div>
    </div>

    <div class="view-content-container">
        <section>
            @using (Html.BeginForm("AddNewCard", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "paymentForm", name = "paymentForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Name)
                @Html.HiddenFor(m => m.GcNumber)
                @Html.HiddenFor(m => m.ClientAccountNumber)
                @Html.HiddenFor(m => m.AmountDue)
                @Html.HiddenFor(m => m.MinAmountDue)
                @Html.HiddenFor(m => m.MaxAmountDue)
                @Html.HiddenFor(m => m.MinimumAllowedAmount)
                @Html.HiddenFor(m => m.OfficeCode)
                @Html.HiddenFor(m => m.CardFlag)
                @Html.HiddenFor(m => m.MasterClientIdentifier)
                @Html.HiddenFor(m => m.BusinessEntityCode)
                @Html.HiddenFor(m => m.ClientBillingName)
                @Html.HiddenFor(m => m.StarFileNumber)
                @Html.HiddenFor(m => m.IsOneTimePayment)
                @Html.HiddenFor(m => m.IsNewSchedule)

                <div>
                    @Html.EditorFor(m => m.NewCard)
                </div>

                <div class="form-group">
                    <div class="col-sm-offset-1 col-sm-10 col-xs-12 margin-top-10 btn-group">
                        <div class="col-sm-4 col-xs-12 center-align margin-top-10">
                            <input name="cancel" type="button" value="@StringResources.AddNewCard_Cancel_button" class="btn btn-default btn-cancel button-width-large" onclick="location.href = '@Url.Action("UpdateWallet", "Home")'" />
                        </div>
                        <div class="col-sm-4 col-xs-12 center-align margin-top-10">
                            <input type="reset" class="btn btn-default btn-cancel button-width-large" value="@StringResources.AddNewCard_Reset_button" />
                        </div>
                        <div class="col-sm-4 col-xs-12 center-align margin-top-10">
                            <input type="submit" id="submit-button" value="@StringResources.AddNewCard_Submit_button" class="btn btn-primary btn-ok button-width-large" />
                        </div>
                    </div>
                </div>
            }
        </section>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/App/NewCard.js"></script>
    <script src="~/Scripts/App/PaymentRequest.js"></script>
}
