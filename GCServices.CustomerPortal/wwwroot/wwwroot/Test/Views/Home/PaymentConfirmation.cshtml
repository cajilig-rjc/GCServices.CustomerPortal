@using GCServices.ConsumerPortal.UI.Models
@model GCServices.ConsumerPortal.UI.Models.PaymentConfirmationViewModel

@{
    ViewBag.Title = StringResources.PaymentConfirmation_VBT;
    ViewBag.BackgroundClass = "background-image-payment-review";
}

<script>
    var Resources = {
        PaymentRequestJs_InvalidCreditCard_txt: "@Html.Raw(HttpUtility.JavaScriptStringEncode(StringResources.PaymentRequestJs_InvalidCreditCard_txt))",
        PaymentRequestJs_MaxPaymentAmount_txt: "@Html.Raw(HttpUtility.JavaScriptStringEncode(StringResources.PaymentRequestJs_MaxPaymentAmount_txt))",
        PaymentRequestJs_MinPaymentAmount_txt: "@Html.Raw(HttpUtility.JavaScriptStringEncode(StringResources.PaymentRequestJs_MinPaymentAmount_txt))",
    };
</script>

<div>
    <div>
        <div class="right-title-dark">@ViewBag.Title</div>
    </div>

    <div class="view-content-container">
        <div class="row">
            @if (Model.IsPaymentSuccessful)
            {
                <div class="col-xs-12 confirmation-logo">
                    <div class="margin-right-10 pull-right">
                        <img src="/Content/Images/printer-24.png" class="img" alt="Print">
                        <a onclick="window.print()"><u>Print</u></a>
                    </div>
                    <p>
                        @Html.DisplayFor(m => m.Name) <br />
                        @Html.DisplayFor(m => m.GcNumber)
                    </p>
                    <p>
                        <b>@StringResources.PaymentConfirmation_PaymentProcessed_txt</b><br />
                    </p>
                    <p>
                        <b>@StringResources.PaymentConfirmation_ConfirmationNumber_label @Html.DisplayFor(m => m.ConfirmationNumber)</b> <br />
                    </p>
                    <p>
                        @StringResources.PaymentConfirmation_AmountPaid_label @Html.DisplayFor(m => m.PaymentAmount) <br />
                        @StringResources.PaymentConfirmation_TransactionDate_label @Html.DisplayFor(m => m.TransactionDate) <br />
                        @StringResources.PaymentConfirmation_Merchant_label <br />
                        @StringResources.PaymentConfirmation_Description_label <br />
                    </p>
                    <p>
                        @StringResources.PaymentConfirmation_Name_label @Html.DisplayFor(m => m.NameOnCard) <br />
                        @StringResources.PaymentConfirmation_CardType_label @Html.DisplayFor(m => m.Card) <br />
                        @StringResources.PaymentConfirmation_CardNumber_label @Html.DisplayFor(m => m.RedactedCardNumber) <br />
                        @StringResources.PaymentConfirmation_Expiration_label @Html.DisplayFor(m => m.ExpirationDate) <br />
                    </p>

                    <p>
                        @StringResources.PaymentConfirmation_Phone_label @Html.DisplayFor(m => m.PhoneNumber)
                    </p>
                    <p>
                        @StringResources.PaymentConfirmation_HomeAddress_label @Html.DisplayFor(m => m.Address) <br />
                        @StringResources.PaymentConfirmation_City_label @Html.DisplayFor(m => m.City) <br />
                        @StringResources.PaymentConfirmation_State_label <span id="State">@Html.DisplayFor(m => m.State)</span> <br />
                        @StringResources.PaymentConfirmation_Zip_label @Html.DisplayFor(m => m.Zipcode) <br />
                    </p>
                    @if (Model.IsBillingAddressSame)
                    {
                        <p>
                            @StringResources.PaymentConfirmation_BillingSameAsHome_txt
                        </p>
                    }
                    else
                    {
                        <p>
                            @StringResources.PaymentConfirmation_BillingAddress_label @Html.DisplayFor(m => m.BillingAddress) <br />
                            @StringResources.PaymentConfirmation_City_label @Html.DisplayFor(m => m.BillingCity) <br />
                            @StringResources.PaymentConfirmation_State_label <span id="BillingState">@Html.DisplayFor(m => m.BillingState)</span> <br />
                            @StringResources.PaymentConfirmation_Zip_label @Html.DisplayFor(m => m.BillingZipcode) <br />
                        </p>
                    }
                    <p id="EmailOption">
                        @StringResources.PaymentConfirmation_Email_label @Html.DisplayTextFor(m => m.Email) <br />
                    </p>
                    <p>
                        @StringResources.RefundRequestDisclosure_txt
                    </p>
                </div>
            }
            else
            {
                <div class="col-sm-12">
                    <p>
                        @Html.DisplayFor(m => m.Name) <br />
                        @Html.DisplayFor(m => m.GcNumber)
                    </p>
                    <p>
                        <b class="text-danger">@Html.DisplayFor(m => m.DeclineMessage)</b> <br />
                    </p>
                    <div>
                        <p style="text-decoration: underline">@StringResources.PaymentConfirmation_PhoneNumber_label</p>
                        <p>@StringResources.PaymentConfirmation_PhoneNumber_txt</p>
                        <p>@StringResources.PaymentConfirmation_SecurityPurposes_txt</p>
                    </div>
                </div>
            }

            <div class="col-sm-12">
                <hr />
            </div>

            <div class="form-group">
                <div class="center-align">
                    @Html.ActionLink(StringResources.MakeAPayment_cshtml_Execute_Manage_My_Account, "ManageMyAccount", new { }, new { @class = "btn btn-primary btn-ok" })
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/App/PaymentConfirmation.js"></script>
}
