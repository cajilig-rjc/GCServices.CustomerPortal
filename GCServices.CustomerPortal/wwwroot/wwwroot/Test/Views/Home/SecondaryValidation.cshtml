@using GCServices.ConsumerPortal.UI
@using GCServices.ConsumerPortal.UI.Models
@model SecondaryValidationViewModel
@{
    ViewBag.Title = StringResources.UpdateProfile_Validation_Title;
    ViewBag.BackgroundClass = "background-image-user-agreement";
    var loginViewModel = Session["LoginModel"] as LoginViewModel;
    ViewBag.PhoneNumber = loginViewModel != null && !string.IsNullOrEmpty(loginViewModel.CustomerServicePhoneNumber) ?
        loginViewModel.CustomerServicePhoneNumber : StringResources.CustomerServicePhoneNumber;
    bool isAmex = loginViewModel.MasterClientIdentifier == "C000107";

    string lang = (string)this.ViewContext.RouteData.Values["lang"];
    bool isSpanish = !string.IsNullOrEmpty(lang) && lang.StartsWith("es");
}

<div>
    <div>
        <h1 class="left-title">@ViewBag.Title</h1>
    </div>

    <div class="view-content-container">
        <div class="gray-box">
            <div class="row">
                <div class="col-sm-9 col-xs-12">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>@StringResources.PaymentRequest_Welcome_txt @Html.DisplayFor(m => m.Name)</h4>
                        </div>
                    </div>
                </div>
                <div class="col-sm-3 col-xs-12 align-dynamic">
                    <h4>@Html.DisplayFor(m => m.GcNumber)</h4>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-xs-12">
                    <a href='@Url.Action("ManageMyAccount", "Home")' class="btn btn-primary btn-ok">@StringResources.MakeAPayment_cshtml_Execute_Manage_My_Account</a>
                </div>
                <div class="col-sm-6  col-xs-12 align-dynamic">
                    <h4><b>@Html.LabelFor(m => m.AmountDue): @Html.DisplayFor(m => m.AmountDue)</b></h4>
                </div>
            </div>
        </div>

        <div class="row padding-left-right-dynamic">
            @if (ViewBag.HasSsn || ViewBag.HasDateOfBirth || ViewBag.HasZip)
            {
                <div class="col-xs-12 margin-top-20">
                    @*<h3>@StringResources.UpdateProfile_cshtml_Execute_MY_PROFILE_small</h3>*@
                    <p>@StringResources.UpdateProfile_Validation_Proceed</p>
                </div>

                using (Html.BeginForm("SecondaryValidation", "Home", new { returnTo = ViewBag.ReturnTo }, FormMethod.Post, new { @class = "form-horizontal margin-left-10", role = "form", id = "profileValidationForm", name = "profileValidationForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.ValidationOption)

                    <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div>@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>

                                @if (ViewBag.HasSsn == true)
                                {
                                    <div>@Html.ValidationMessageFor(m => m.Ssn, "", new { @class = "text-danger" })</div>
                                }

                                @if (ViewBag.HasDateOfBirth)
                                {
                                    <div>@Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })</div>
                                    <div>@Html.ValidationMessageFor(m => m.BirthMonth, "", new { @class = "text-danger" })</div>
                                    <div>@Html.ValidationMessageFor(m => m.BirthDay, "", new { @class = "text-danger" })</div>
                                    <div>@Html.ValidationMessageFor(m => m.BirthYear, "", new { @class = "text-danger" })</div>
                                }

                                @if (ViewBag.HasZip == true)
                                {
                                    <div class="col-sm-12">@Html.ValidationMessageFor(m => m.Zip, "", new { @class = "text-danger" })</div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                @if (ViewBag.HasSsn)
                                {
                                    <div class="col-sm-12 col-xs-12">
                                        @if (isSpanish)
                                        {
                                            @Html.LabelFor(m => m.Ssn, new { @class = "col-sm-5 col-xs-12 control-label label-left" })
                                        }
                                        else
                                        {
                                            @Html.LabelFor(m => m.Ssn, new { @class = "col-sm-3 col-xs-8 control-label label-left" })
                                        }
                                        <div class="col-sm-4 col-xs-8">
                                            @Html.TextBoxFor(m => m.Ssn, new { @class = "form-control validation-input", type = "number", autocomplete = "off", maxlength = 4, oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                                        </div>
                                    </div>
                                }

                                @if (ViewBag.HasDateOfBirth)
                                {
                                    if (ViewBag.HasSsn)
                                    {
                                        <div class="col-sm-12 col-xs-12">
                                            <div class="col-xs-12">
                                                <div>@StringResources.Text_or</div>
                                            </div>
                                        </div>
                                    }

                                <div class="col-sm-12 col-xs-12">
                                    @if (isAmex)
                                    {
                                        if (isSpanish)
                                        {
                                            @Html.LabelFor(m => m.BirthYear, new { @class = "col-sm-5 col-xs-12 control-label label-left" })
                                        }
                                        else
                                        {
                                            @Html.LabelFor(m => m.BirthYear, new { @class = "col-sm-3 col-xs-8 control-label label-left" })
                                        }
                                        <div class="col-sm-4 col-xs-8">
                                            @Html.TextBoxFor(m => m.BirthYear, new { @class = "form-control validation-input", type = "number", placeholder = "YYYY", autocomplete = "off", maxlength = 4, oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                                        </div>
                                    }
                                    else
                                    {
                                        if (isSpanish)
                                        {
                                            @Html.LabelFor(m => m.DateOfBirth, new { @class = "col-sm-5 col-xs-12 control-label label-left" })
                                        }
                                        else
                                        {
                                            @Html.LabelFor(m => m.DateOfBirth, new { @class = "col-sm-3 col-xs-8 control-label label-left" })
                                        }
                                        <div class="col-sm-4 col-xs-12">
                                            @Html.TextBoxFor(m => m.BirthMonth, new { @class = "form-control input-month", type = "number", placeholder = "MM", autocomplete = "off", maxlength = 2, oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                                            <label class="control-label">/</label>
                                            @Html.TextBoxFor(m => m.BirthDay, new { @class = "form-control input-day", type = "number", placeholder = "DD", autocomplete = "off", maxlength = 2, oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                                            <label class="control-label">/</label>
                                            @Html.TextBoxFor(m => m.BirthYear, new { @class = "form-control input-year", type = "number", placeholder = "YYYY", autocomplete = "off", maxlength = 4, oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                                        </div>
                                    }
                                </div>
                                }

                                @if (ViewBag.HasSsn != true && ViewBag.HasDateOfBirth != true && ViewBag.HasZip)
                                {
                                    <div class="col-sm-12 col-xs-12">
                                        @if (isSpanish)
                                        {
                                            @Html.LabelFor(m => m.Zip, new { @class = "col-sm-5 col-xs-12 control-label label-left" })
                                        }
                                        else
                                        {
                                            @Html.LabelFor(m => m.Zip, new { @class = "col-sm-3 col-xs-8 control-label label-left" })
                                        }
                                        <div class="col-sm-4 col-xs-8">
                                            @Html.TextBoxFor(m => m.Zip, new { @class = "form-control validation-input", autocomplete = "off", maxlength = 5, oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div>
                            <div class="col-sm-12 col-xs-12">
                                @if (isSpanish)
                                {
                                    <div class="col-sm-offset-3 margin-top-20 margin-bottom-20">
                                        <div class="btn-group">
                                            <div class="btn">
                                                @Html.ActionLink(StringResources.UpdateBankInfo_Cancel, "ManageMyAccount", new { }, new { @class = "btn btn-primary btn-ok" })
                                            </div>
                                            <div class="btn">
                                                <input name="submitButton" type="submit" value="@StringResources.Index_Submit_button" id="submitButton" class="btn btn-primary btn-ok" />
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="col-sm-offset-5 col-sm-6 margin-top-20 margin-bottom-20">
                                    <input name="submitButton" type="submit" value="@StringResources.Index_Submit_button" id="submitButton" class="btn btn-primary btn-ok" />
                                </div>*@
                                }
                                else
                                {
                                    <div class="col-sm-offset-1 margin-top-20 margin-bottom-20">
                                        <div class="btn-group">
                                            <div class="btn">
                                                @Html.ActionLink(StringResources.UpdateBankInfo_Cancel, "ManageMyAccount", new { }, new { @class = "btn btn-cancel" })
                                            </div>
                                            <div class="btn">
                                                <input name="submitButton" type="submit" value="@StringResources.Index_Submit_button" id="submitButton" class="btn btn-primary btn-ok" />
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="margin-top-20 text-danger">@StringResources.Layout_PleaseContact_1_txt @ViewBag.PhoneNumber.</div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <script src="~/Scripts/jquery-ui.js"></script>

    <script src="~/Scripts/App/SecondaryValidation.js"></script>
}
