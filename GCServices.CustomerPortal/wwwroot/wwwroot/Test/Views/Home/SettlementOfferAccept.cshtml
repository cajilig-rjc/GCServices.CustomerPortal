@using GCServices.ConsumerPortal.UI.Models
@using GCServices.Treasury.Eps.Service.Agent
@model GCServices.ConsumerPortal.UI.Models.SettlementOfferAcceptViewModel

@{
    ViewBag.Title = StringResources.SettlementOffer_Title;
    ViewBag.BackgroundClass = "background-image-user-agreement";
    var loginViewModel = Session["LoginModel"] as LoginViewModel;
    ViewBag.PhoneNumber = loginViewModel != null && !string.IsNullOrEmpty(loginViewModel.CustomerServicePhoneNumber) ?
        loginViewModel.CustomerServicePhoneNumber : StringResources.CustomerServicePhoneNumber;
    bool canChangeScheduledPaymentDate = Model.PaymentArrangement != null && Model.PaymentArrangement.ScheduledPayments.Length == 1;
    var sifDate = loginViewModel.SIFDate;
    var maxPaymentDate = DateTime.Today.AddDays(30);
    if (maxPaymentDate > sifDate)
    {
        maxPaymentDate = sifDate > DateTime.Today ? sifDate.AddDays(-1) : DateTime.Today;
    }

    if (canChangeScheduledPaymentDate)
    {
        DateTime scheduledPaymentDate = Model.PaymentArrangement.ScheduledPayments[0].PaymentDate;
        if (scheduledPaymentDate >= DateTime.Today)
        {
            maxPaymentDate = scheduledPaymentDate;
        }
    }

    WebGrid grid = null;
    if (Model.PaymentArrangement != null)
    {
        grid = new WebGrid(Model.PaymentArrangement.ScheduledPayments, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent", rowsPerPage: 5000);
    }
}

<div>
    <div>
        <h1 class="left-title">@ViewBag.Title</h1>
    </div>

    <div class="view-content-container">
        <div class="gray-box">
            <div class="row">
                <div class="col-sm-9 col-xs-12">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>@StringResources.PaymentRequest_Welcome_txt @Html.DisplayFor(m => m.Name)</h4>
                        </div>
                    </div>
                </div>
                <div class="col-sm-3 col-xs-12 align-dynamic">
                    <h4>@Html.DisplayFor(m => m.GcNumber)</h4>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-xs-12">
                    <a href='@Url.Action("ManageMyAccount", "Home")' class="btn btn-primary btn-ok">@StringResources.MakeAPayment_cshtml_Execute_Manage_My_Account</a>
                </div>
                <div class="col-sm-6  col-xs-12 align-dynamic">
                    <h4><b>@Html.LabelFor(m => m.AmountDue): @Html.DisplayFor(m => m.AmountDue)</b></h4>
                </div>
            </div>
        </div>

        <div>
            @using (Html.BeginForm("SettlementOfferAccept", "Home", new { }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "sppForm", name = "sppForm" }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(m => m.GcNumber)
                @Html.HiddenFor(m => m.AmountDue)
                @Html.HiddenFor(m => m.Name)
                @Html.HiddenFor(m => m.SettlementAmount)
                @Html.HiddenFor(m => m.SettlementStatus)
                @Html.HiddenFor(m => m.CardFlag)
                @Html.HiddenFor(m => m.CardOption)

                if (Model.SelectedCardId == 0)
                {
                    @Html.HiddenFor(m => m.SelectedCardId)
                }

                <div class="form-group">
                    <div class="margin-top-20 col-xs-12 font-size-large">
                        <div class="font-weight-bold">@StringResources.SettlementOffer_Label: <span class="text-red">@Html.DisplayFor(m => m.SettlementAmount)</span></div>
                        @if (Model.SettlementStatus == "SPP" && Model.PaymentArrangement == null)
                        {
                            <div class="font-weight-bold margin-bottom-20">@StringResources.SettlementOffer_PaymentDate_Label: @Html.TextBoxFor(m => m.PaymentDate, "{0:d}", new { @class = "datepick" })</div>
                        }
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-xs-12 input-group-title">
                        @StringResources.SettlementOffer_PaymentMethod_Label
                    </div>

                    @if (Model.CardFlag == "C")
                    {
                        <div class="col-xs-12">@StringResources.Cards_CreditOnly_txt</div>
                    }
                    else if (Model.CardFlag == "D")
                    {
                        <div class="col-xs-12">@StringResources.Cards_DebitOnly_txt</div>
                    }
                </div>

                if (Model.PaymentArrangement == null)
                {
                    <div class="form-group">
                        <div class="col-xs-12">
                            @if (Model.CardOption == GCServices.ConsumerPortal.UI.Models.CardOption.NewCard)
                            {
                                @Html.EditorFor(m => m.NewCard)
                            }
                            else if (Model.CardOption == GCServices.ConsumerPortal.UI.Models.CardOption.FromWallet)
                            {
                                @Html.EditorFor(m => m.CardFromWallet)
                            }
                            else
                            {
                                <div class="margin-bottom-20">
                                    <div>
                                        <input type="submit" name="newCardButton" id="newCardButton" value="@StringResources.PaymentMethod_NewCard_txt" class="btn btn-primary btn-ok button-width-large margin-right-20" />
                                        @*@Html.ActionLink(StringResources.PaymentMethod_NewCard_txt, "SettlementOfferAccept", new { cardOption = "NewCard" }, new { @class = "btn btn-primary btn-ok button-width-large margin-right-20" })*@
                                    </div>
                                    <div>
                                        @StringResources.PaymentMethod_NewCard_Description_txt
                                    </div>
                                </div>
                                <div class="margin-bottom-20">
                                    <div>
                                        <input type="submit" name="fromWalletButton" id="fromWalletButton" value="@StringResources.PaymentMethod_FromWallet_txt" class="btn btn-primary btn-ok button-width-large" />
                                        @*@Html.ActionLink(StringResources.PaymentMethod_FromWallet_txt, "SettlementOfferAccept", new { cardOption = "FromWallet" }, new { @class = "btn btn-primary btn-ok button-width-large" })*@
                                    </div>
                                    <div>
                                        @StringResources.PaymentMethod_FromWallet_Description_txt
                                    </div>
                                </div>
                            }
                        </div>

                    </div>

                    if (Model.CardOption != GCServices.ConsumerPortal.UI.Models.CardOption.None)
                    {
                        <div>
                            @Html.CheckBox("HasAgreement") @StringResources.NewSchedule_PaymentScheduleTerms_checkbox
                            <span class="btn-link tandc" data-toggle="modal" data-target="#termsAndConditionsModal">@StringResources.NewSchedule_PaymentScheduleTerms1_txt</span>.
                        </div>

                        <div class="form-group">
                            <div class="col-xs-12">
                                <hr class="hr-visible" />
                            </div>
                            <div class="col-xs-12">
                                <p>
                                    @StringResources.PaymentRequest_Browser1_txt
                                    @StringResources.PaymentRequest_Browser2_txt
                                </p>
                                <p>
                                    <b>@StringResources.PaymentRequest_PaymentAuthorization_txt</b><br />
                                    <b>@StringResources.PaymentRequest_PleaseRead_txt</b> @StringResources.PaymentRequest_PaymentAuthoriztionLegalStatement_txt
                                </p>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-offset-1 col-sm-10 col-xs-12 margin-top-10 btn-group">
                                <div class="col-sm-4 col-xs-12 center-align margin-top-10">
                                    @Html.ActionLink(StringResources.PaymentRequest_Cancel_button, "SettlementOfferAccept", null, new { @class = "btn btn-default btn-cancel button-width-large" })
                                </div>
                                <div class="col-sm-4 col-xs-12 center-align margin-top-10">
                                    <input type="submit" name="submitButton" id="submitButton" value="@StringResources.PaymentRequest_SubmitPayment_button" class="btn btn-primary btn-ok button-width-large" />
                                </div>
                            </div>

                        </div>
                    }
                }
                else
                {
                    <div class="form-group">

                        <div class="col-xs-12">
                            @foreach (var card in Model.ValidPaymentCards)
                            {
                                <div class="col-xs-12">
                                    @Html.RadioButtonFor(m => m.SelectedCardId, card.CreditCardId)
                                    @if (card.Type == CreditCardType.Visa)
                                    {
                                        <img src="/Content/Images/visa-icon.png" height=30 alt="Visa"><label class="margin-left-20 payment-method-label">@StringResources.UpdateWallet_Visa_label</label>
                                    }
                                    else
                                    {
                                        <img src="/Content/Images/mastercard-icon.png" height=30 alt="MasterCard"><label class="margin-left-20 payment-method-label">@StringResources.UpdateWallet_MasterCard_label</label>
                                    }
                                    <label class="payment-method-label">@StringResources.UpdateWallet_EndingIn_label @card.Number.Substring(card.Number.Length - 4)</label>
                                </div>
                            }
                        </div>
                        <div class="col-xs-12">
                            <h4>@Html.ActionLink(@StringResources.NewSchedule_AddNewCard_txt, "AddNewCard")</h4>
                        </div>
                        <div class="form-group margin-top-20">
                            <div class="col-xs-12">
                                <div class="col-xs-12">
                                    <div @(Model.ApplyPaymentCardIsEnabled ? "" : "class=mytooltip")>
                                        <input type="submit" name="applyButton" id="applyButton" value="@StringResources.SettlementSPPAccept_ApplyToAllPayments_button" class="btn btn-primary btn-ok" @(Model.ApplyPaymentCardIsEnabled ? "" : "disabled") />
                                        <span class="tooltiptext">@StringResources.NewSchedule_CreateScheduleToolTip_txt</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12">
                            <p>@StringResources.EditSchedule_PleaseReview_p</p>
                            @if (canChangeScheduledPaymentDate)
                            {
                                <p>@StringResources.SettlmentSPPAccept_Alter_Amount @ViewBag.PhoneNumber.</p>
                            }
                            else
                            {
                                <p>@StringResources.SettlmentSPPAccept_Alter_Payments @ViewBag.PhoneNumber.</p>
                            }
                            @Html.ValidationMessageFor(m => m.GcNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-12">
                            @if (Model.CardFlag == "C")
                            {
                                <div>@StringResources.Cards_CreditOnly_txt</div>
                            }
                            else if (Model.CardFlag == "D")
                            {
                                <div>@StringResources.Cards_DebitOnly_txt</div>
                            }

                            @grid.GetHtml(htmlAttributes: new { id = "EditPaymentScheduleTable" },
                                        tableStyle: "webGrid table schedule-table",
                                        headerStyle: "header",
                                        alternatingRowStyle: "alt",
                                        selectedRowStyle: "select",
                                        columns: grid.Columns(
    grid.Column(null, null, @<text><input type="hidden" id="AgencyTrackingId" value="@item.AgencyTrackingId" /></text>, style: "Zero"),
grid.Column("PaymentDate", StringResources.EditSchedule_PaymentDate_gridcol, @<text><span class="display-mode"><label id="lblPaymentDate">@item.PaymentDate.ToString("MM/dd/yyyy")</label></span>
                        @if (canChangeScheduledPaymentDate)
                     {
                        <input type="text" readonly name="PaymentDate" value="@item.PaymentDate.ToString("d")" class="edit-mode datepick form-control" />
                 }
                 else
                 {
                        <input type="hidden" id="PaymentDate" value="@item.PaymentDate" />
                 }
                        </text>, style: "Medium"),
grid.Column("PaymentAmount", StringResources.EditSchedule_PaymentAmount_gridcol, @<text><span><label id="lblPaymentAmount">@item.PaymentAmount.ToString("C2")</label></span></text>, style: "Medium"),
grid.Column("CreditCard", StringResources.EditSchedule_CreditCard_gridcol, @<text><span class="display-mode">
                                @if (item.CreditCard == null)
                             {
                            <label id="lblCreditCard"></label>
                     }
                     else
                     {
                        <label id="lblCreditCard">@item.CreditCard.Type @StringResources.HomeController_GetCreditCards__Card_ending_in @item.CreditCard.Number.Substring(item.CreditCard.Number.Length - 4)</label>
                 }
                            </span>
                            @if (item.CreditCard == null)
                         {
                        <label class="text-danger">@StringResources.EditSettlementSchedule_Please_Add_Card</label>
                 }
                 else
                 {
                        @Html.DropDownListFor(m => m.SelectedCardId, new SelectList(Model.PaymentCardsViewModel.PaymentCards, "Id", "DisplayNumber", Model.SelectedCardId = item.CreditCard.CreditCardId), new { @class = "edit-mode form-control", id = "CreditCard" })
                 }
                        </text>, style: "Large"),
grid.Column("Action", StringResources.NewSchedule_PaymentScheduleAction_gridcol, @<text>
                            @if (item.CreditCard != null)
                         {
                        <button type="button" class="btn btn-xs btn-primary edit-user display-mode" style="width: 55px">@StringResources.EditSchedule_Edit_button</button>
                        <button type="button" class="btn btn-xs btn-primary save-user edit-mode" style="width: 55px">@StringResources.EditSchedule_Save_button</button>
                        <button type="button" class="btn btn-xs btn-cancel cancel-user edit-mode" style="width: 55px">@StringResources.EditSchedule_Cancel_button</button>
                 }
                        </text>, canSort: false, style: "Medium")
))
                        </div>

                        <div class="col-xs-12">
                            <p>@Html.CheckBox("HasAgreement") @StringResources.EditSchedule_AgreePaymentSchedule_txt <a href="javascript: void(0)" data-toggle="modal" data-target="#termsAndConditionsModal">@StringResources.EditSchedule_Terms1_txt</a>.</p>
                            <p>@StringResources.EditSchedule_Terms2_txt</p>
                            <p>@StringResources.EditSchedule_Terms3_txt</p>
                            <p>@StringResources.EditSchedule_Terms4_txt</p>
                            <p>@StringResources.RefundRequestDisclosure_txt</p>
                        </div>

                        <div class="form-group margin-top-20" id="Buttons">
                            <div class="col-xs-12">
                                @Html.HiddenFor(m => m.IsAgreed)
                                @Html.HiddenFor(m => m.AmountDue)
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-offset-1 col-sm-10 col-xs-12 margin-top-10 btn-group">
                            <div class="col-sm-6 col-xs-12 center-align margin-top-10">
                                @Html.ActionLink(StringResources.PaymentRequest_Cancel_button, "SettlementOffer", null, new { @class = "btn btn-default btn-cancel button-width-large" })
                            </div>
                            <div class="col-sm-6 col-xs-12 center-align margin-top-10 margin-bottom-20">
                                <div id="submitButtonToolTip" class="mytooltip" )>
                                    <input type="submit" name="submitButton" id="submitButton" value="@StringResources.EditSchedule_SaveSchedule_button" class="btn btn-primary btn-ok button-width-large" disabled />
                                    <span name="submitButtonToolTipText" class="tooltiptext">@StringResources.NewSettlementSchedule_AgreeToolTip_txt</span>
                                </div>
                            </div>
                        </div>

                    </div>
                }
            }

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui.js"></script>
    <script src="~/Scripts/App/ShowContent.js"></script>

    @if (Model.CardOption == GCServices.ConsumerPortal.UI.Models.CardOption.NewCard)
    {
        <script>
            var Resources = {
                PaymentRequestJs_InvalidCreditCard_txt: "@Html.Raw(HttpUtility.JavaScriptStringEncode(StringResources.PaymentRequestJs_InvalidCreditCard_txt))",
            };
        </script>
        <script src="~/Scripts/App/NewCard.js"></script>
    }

    @if (Model.PaymentArrangement == null)
    {
        <script>
            var hasPaymentArrangement = false;
            var hasPaymentDateInput = true;
            var maxPaymentDate = new Date(@maxPaymentDate.Year, @(maxPaymentDate.Month - 1), @maxPaymentDate.Day);
        </script>
    }
    else
    {
        <script>
            var hasPaymentArrangement = true;
            var hasPaymentDateInput = @(canChangeScheduledPaymentDate ? "true" : "false");
            var maxPaymentDate = new Date(@maxPaymentDate.Year, @(maxPaymentDate.Month - 1), @maxPaymentDate.Day);
        </script>
    }

    <script src="~/Scripts/App/SettlementOfferAccept.js"></script>
}

