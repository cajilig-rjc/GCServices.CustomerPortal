@using GCServices.Treasury.Eps.Service.Agent
@model GCServices.ConsumerPortal.UI.Models.SettlementOfferAcceptViewModel

@{
    ViewBag.Title = StringResources.SettlementOffer_Title;
    ViewBag.BackgroundClass = "background-image-user-agreement";
}

<div>
    <div>
        <h1 class="left-title">@ViewBag.Title</h1>
    </div>

    <div class="view-content-container">
        <div class="gray-box">
            <div class="row">
                <div class="col-sm-9 col-xs-12">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>@StringResources.PaymentRequest_Welcome_txt @Html.DisplayFor(m => m.Name)</h4>
                        </div>
                    </div>
                </div>
                <div class="col-sm-3 col-xs-12 align-dynamic">
                    <h4>@Html.DisplayFor(m => m.GcNumber)</h4>
                </div>
            </div>

            <div class="row">
                @*<div class="col-sm-6 col-xs-12">
                        <a href='@Url.Action("ManageMyAccount", "Home")' class="btn btn-primary btn-ok">@StringResources.MakeAPayment_cshtml_Execute_Manage_My_Account</a>
                        <a href='@Url.Action("MakeAPayment", "Home")' class="btn btn-primary btn-ok margin-left-10">@StringResources.ManageMyAccount_cshtml_Execute_Make_a_Payment</a>
                    </div>*@
                <div class="col-sm-offset-6 col-sm-6 col-xs-12 align-dynamic">
                    <h4><b>@Html.LabelFor(m => m.AmountDue): @Html.DisplayFor(m => m.AmountDue)</b></h4>
                </div>
            </div>
        </div>

        <div>
            @using (Html.BeginForm("SettlementOfferConfirmation", "Home", new { }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "sapForm", name = "sapForm" }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(m => m.GcNumber)
                @Html.HiddenFor(m => m.AmountDue)
                @Html.HiddenFor(m => m.Name)
                @Html.HiddenFor(m => m.SettlementAmount)
                @Html.HiddenFor(m => m.PaymentDate)
                @Html.HiddenFor(m => m.CardOption)
                if (Model.CardOption == GCServices.ConsumerPortal.UI.Models.CardOption.FromWallet)
                {
                    @Html.HiddenFor(m => m.CardFromWallet.SelectedCardId)

                }
                else if (Model.CardOption == GCServices.ConsumerPortal.UI.Models.CardOption.NewCard)
                {
                    @Html.HiddenFor(m => m.NewCard.Card)
                    @Html.HiddenFor(m => m.NewCard.CardFlag)
                    @Html.HiddenFor(m => m.NewCard.CardNumber)
                    @Html.HiddenFor(m => m.NewCard.ExpirationMonth)
                    @Html.HiddenFor(m => m.NewCard.ExpirationYear)
                    @Html.HiddenFor(m => m.NewCard.Cvv)
                    @Html.HiddenFor(m => m.NewCard.NameOnCard)
                    @Html.HiddenFor(m => m.NewCard.PhoneNumber)
                    @Html.HiddenFor(m => m.NewCard.Address)
                    @Html.HiddenFor(m => m.NewCard.City)
                    @Html.HiddenFor(m => m.NewCard.State)
                    @Html.HiddenFor(m => m.NewCard.Zipcode)
                    @Html.HiddenFor(m => m.NewCard.IsBillingAddressSame)
                    @Html.HiddenFor(m => m.NewCard.BillingAddress)
                    @Html.HiddenFor(m => m.NewCard.BillingCity)
                    @Html.HiddenFor(m => m.NewCard.BillingState)
                    @Html.HiddenFor(m => m.NewCard.BillingZipcode)
                }

                <div>@StringResources.SettlementOffer_Label: <span class="text-red">@Html.DisplayFor(m => m.SettlementAmount)</span></div>

                <div class="form-group">
                    <div>
                        <div class="col-xs-12">
                            @StringResources.SettlementOffer_PaymentDate_Label: @Html.DisplayFor(m => m.PaymentDate)
                        </div>
                        <div class="col-xs-12">
                            @if (Model.CardOption == GCServices.ConsumerPortal.UI.Models.CardOption.FromWallet)
                            {
                                @Html.DisplayFor(m => m.CardFromWallet)
                            }
                            else if (Model.CardOption == GCServices.ConsumerPortal.UI.Models.CardOption.NewCard)
                            {
                                @Html.DisplayFor(m => m.NewCard)
                            }
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-offset-1 col-sm-10 col-xs-12 margin-top-10 btn-group">
                        <div class="col-sm-4 col-xs-12 center-align margin-top-10">
                            <input type="submit" id="editButton" name="editButton" value="@StringResources.PaymentSummary_Edit_button" class="btn btn-default btn-cancel button-width-large" />
                        </div>
                        <div class="col-sm-4 col-xs-12 center-align margin-top-10">
                            <input type="submit" id="submitButton" name="submitButton" value="@StringResources.PaymentRequest_SubmitPayment_button" class="btn btn-primary btn-ok button-width-large" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui.js"></script>
    <script src="~/Scripts/App/ShowContent.js"></script>
}
