@using GCServices.ConsumerPortal.UI
@using GCServices.ConsumerPortal.UI.Models
@model GCServices.ConsumerPortal.UI.Models.BankruptcyInfoViewModel
@{
    ViewBag.Title = StringResources.UpdateBankruptcyInfo_cshtml_Execute_Bankruptcy_Info;
    ViewBag.BackgroundClass = "background-image-payment-review";
}

<div>
    <div>
        <h1 class="right-title-dark">@ViewBag.Title</h1>
    </div>

    <div class="view-content-container">
        <div class="gray-box">
            <div class="row">
                <div class="col-sm-9 col-xs-12">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>@StringResources.PaymentRequest_Welcome_txt @Html.DisplayFor(m => m.Name)</h4>
                        </div>
                    </div>
                </div>
                <div class="col-sm-3 col-xs-12 align-dynamic">
                    <h4>@Html.DisplayFor(m => m.GcNumber)</h4>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-xs-12">
                    <a href='@Url.Action("ManageMyAccount", "Home")' class="btn btn-primary btn-ok">@StringResources.MakeAPayment_cshtml_Execute_Manage_My_Account</a>
                </div>
                <div class="col-sm-6 col-xs-12 align-dynamic">
                    <h4><b>@Html.LabelFor(m => m.AmountDue): @Html.DisplayFor(m => m.AmountDue)</b></h4>
                </div>
            </div>
        </div>

        <div class="row padding-left-right-50">
            <div class="col-xs-12">
                <h4><b>@StringResources.ManageMyAccount_cshtml_Execute_Enter_Bankruptcy_Information</b></h4>
                <div>@StringResources.PaymentRequestMobil_RequiredField_txt</div>
            </div>
            <section id="profileForm" class="payment-form">
                @using (Html.BeginForm("UpdateBankruptcyInfo", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal margin-left-10", role = "form", id = "profileForm", name = "profileForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.IsEditMode)
                    @Html.HiddenFor(m => m.IsAttorneyZipCodeValid)
                    @Html.HiddenFor(m => m.IsTrusteeZipCodeValid)
                    <div class="form-group">
                        <div>@Html.ValidationMessageFor(m => m.CaseNumber, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.FilingDate, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.ChapterNumber, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.AttorneyName, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.AttorneyPhoneNumber, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.AttorneyAddress, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.AttorneyCity, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.AttorneyState, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.AttorneyZipcode, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.TrusteeName, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.TrusteePhoneNumber, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.TrusteeAddress, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.TrusteeCity, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.TrusteeState, "", new { @class = "text-danger" })</div>
                        <div>@Html.ValidationMessageFor(m => m.TrusteeZipcode, "", new { @class = "text-danger" })</div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12 col-xs-12">
                            <div class="form-group">
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.CaseNumber, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {
                                            @Html.TextBoxFor(m => m.CaseNumber, new { @class = "form-control", autocomplete = "off" })
                                        }
                                        else
                                        {
                                            <p class="padding-top-7">@Html.DisplayFor(m => m.CaseNumber)<br /></p>}
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.FilingDate, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {
                                            @Html.TextBoxFor(m => m.FilingDate, "{0:d}", new { @class = "form-control datepick", @readonly = "readonly" })
                                        }
                                        else
                                        {
                                            <p class="padding-top-7">@Html.DisplayFor(m => m.FilingDate)<br /></p>}
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.ChapterNumber, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {
                                            @Html.TextBoxFor(m => m.ChapterNumber, new { @class = "form-control", autocomplete = "off" })
                                        }
                                        else
                                        {
                                            <p class="padding-top-7">@Html.DisplayFor(m => m.ChapterNumber)<br /></p>
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.AttorneyName, new { @class = "col-sm-3 control-label required" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {
                                            @Html.TextBoxFor(m => m.AttorneyName, new { @class = "form-control", autocomplete = "off" })
                                            <div>@StringResources.UpdateBankruptcyInfo_RepresentingSelf_txt</div>
                                        }
                                        else
                                        {
                                            <p class="padding-top-7">@Html.DisplayFor(m => m.AttorneyName)<br /></p>
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.AttorneyPhoneNumber, new { @class = "col-sm-3 control-label required" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {@Html.TextBoxFor(m => m.AttorneyPhoneNumber, new { @class = "form-control", autocomplete = "off" })
                                    }
                                    else
                                    {
                                        <p class="padding-top-7">@Html.DisplayFor(m => m.AttorneyPhoneNumber)<br /></p>
                                    }
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.AttorneyAddress, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {
                                            @Html.TextBoxFor(m => m.AttorneyAddress, new { @class = "form-control", autocomplete = "off" })
                                        }
                                        else
                                        {
                                            <p class="padding-top-7">@Html.DisplayFor(m => m.AttorneyAddress)<br /></p>
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.AttorneyZipcode, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {
                                            @Html.TextBoxFor(m => m.AttorneyZipcode, new { @class = "form-control", autocomplete = "off" })
                                        }
                                        else
                                        {
                                            <p class="padding-top-7">@Html.DisplayFor(m => m.AttorneyZipcode)<br /></p>
                                        }
                                    </div>
                                </div>
                                <div id="AttorneyAreaForRefresh">
                                    <div class="col-sm-12 col-xs-12">
                                        @Html.LabelFor(m => m.AttorneyCity, new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-9">
                                            @if (Model.IsEditMode)
                                            {
                                                if (Model.IsAttorneyZipCodeValid)
                                                {
                                                    @Html.HiddenFor(m => m.AttorneyCity)
                                                    @Html.TextBoxFor(m => m.AttorneyCity, new { @class = "form-control", autocomplete = "off", disabled = "disabled" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(m => m.AttorneyCity, new { @class = "form-control", autocomplete = "off" })
                                                }
                                            }
                                            else
                                            {
                                                @Html.HiddenFor(m => m.AttorneyCity)
                                                <p class="padding-top-7">@Html.DisplayFor(m => m.AttorneyCity)<br /></p>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-xs-12">
                                        @Html.LabelFor(m => m.AttorneyState, new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-9">
                                            @if (Model.IsEditMode)
                                            {
                                                if (Model.IsAttorneyZipCodeValid)
                                                {
                                                    @Html.HiddenFor(m => m.AttorneyState)
                                                    @Html.DropDownListFor(m => m.AttorneyState, new SelectList(Enum.GetValues(typeof(State))), "Select", new { @class = "form-control", disabled = "disabled" })
                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(m => m.AttorneyState, new SelectList(Enum.GetValues(typeof(State))), "Select", new { @class = "form-control" })
                                                }

                                            }
                                            else
                                            {
                                                @Html.HiddenFor(m => m.AttorneyState)
                                                <p class="padding-top-7">@Html.DisplayFor(m => m.AttorneyState)<br /></p>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.TrusteeName, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {
                                            @Html.TextBoxFor(m => m.TrusteeName, new { @class = "form-control", autocomplete = "off" })
                                        }
                                        else
                                        {
                                            <p class="padding-top-7">@Html.DisplayFor(m => m.TrusteeName)<br /></p>
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.TrusteePhoneNumber, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {
                                            @Html.TextBoxFor(m => m.TrusteePhoneNumber, new { @class = "form-control", autocomplete = "off" })
                                        }
                                        else
                                        {
                                            <p class="padding-top-7">@Html.DisplayFor(m => m.TrusteePhoneNumber)<br /></p>
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.TrusteeAddress, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {
                                            @Html.TextBoxFor(m => m.TrusteeAddress, new { @class = "form-control", autocomplete = "off" })
                                        }
                                        else
                                        {
                                            <p class="padding-top-7">@Html.DisplayFor(m => m.TrusteeAddress)<br /></p>
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-12 col-xs-12">
                                    @Html.LabelFor(m => m.TrusteeZipcode, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @if (Model.IsEditMode)
                                        {
                                            @Html.TextBoxFor(m => m.TrusteeZipcode, new { @class = "form-control", autocomplete = "off" })
                                        }
                                        else
                                        {
                                            <p class="padding-top-7">@Html.DisplayFor(m => m.TrusteeZipcode)<br /></p>
                                        }
                                    </div>
                                </div>
                                <div id="TrusteeAreaForRefresh">
                                    <div class="col-sm-12 col-xs-12">
                                        @Html.LabelFor(m => m.TrusteeCity, new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-9">
                                            @if (Model.IsEditMode)
                                            {
                                                if (Model.IsTrusteeZipCodeValid)
                                                {
                                                    @Html.HiddenFor(m => m.TrusteeCity)
                                                    @Html.TextBoxFor(m => m.TrusteeCity, new { @class = "form-control", autocomplete = "off", disabled = "disabled" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(m => m.TrusteeCity, new { @class = "form-control", autocomplete = "off" })
                                                }
                                            }
                                            else
                                            {
                                                @Html.HiddenFor(m => m.TrusteeCity)
                                                <p class="padding-top-7">@Html.DisplayFor(m => m.TrusteeCity)<br /></p>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-xs-12">
                                        @Html.LabelFor(m => m.TrusteeState, new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-9">
                                            @if (Model.IsEditMode)
                                            {
                                                if (Model.IsTrusteeZipCodeValid)
                                                {
                                                    @Html.HiddenFor(m => m.TrusteeState)
                                                    @Html.DropDownListFor(m => m.TrusteeState, new SelectList(Enum.GetValues(typeof(State))), "Select", new { @class = "form-control", disabled = "disabled" })
                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(m => m.TrusteeState, new SelectList(Enum.GetValues(typeof(State))), "Select", new { @class = "form-control" })
                                                }
                                            }
                                            else
                                            {
                                                @Html.HiddenFor(m => m.TrusteeState)
                                                <p class="padding-top-7">@Html.DisplayFor(m => m.TrusteeState)<br /></p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    if (Model.IsEditMode)
                    {
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="col-sm-offset-3 col-sm-6 margin-top-20 margin-bottom-20">
                                        <input name="cancelButton" type="button" value="@StringResources.UpdateBankruptcyInfo_cshtml_Execute_CANCEL" id="cancelButton" class="btn btn-cancel margin-right-10" onclick="location.href = '@Url.Action("ManageMyAccount", "Home")'" />
                                        <input name="submitButton" type="submit" value="@StringResources.UpdateBankruptcyInfo_cshtml_Execute_SUBMIT_CHANGES" id="submitButton" class="btn btn-primary btn-ok" onclick="alert('@Html.Raw(StringResources.UpdateProfile_cshtml_Execute_Prompt_on_submit)')" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </section>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <script src="~/Scripts/jquery-ui.js"></script>
    <script src="~/Scripts/App/UpdateBankruptcyInfo.js"></script>
}
